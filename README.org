#+TITLE: thundersnow

Digital audio workstation and [[https://en.wikipedia.org/wiki/Live_coding][live coding]] laboratory in Common Lisp using the [[https://github.com/McCLIM/McCLIM/][McCLIM]] Common Lisp Interface Manager implementation.

Contains various GUIs and functionality for working with audio in Lisp in real time. Primarily developed for use with [[https://github.com/defaultxr/cl-patterns][cl-patterns]] and [[https://github.com/defaultxr/bdef][bdef]], using audio servers like [[https://supercollider.github.io/][SuperCollider]] (via [[https://github.com/byulparan/cl-collider][cl-collider]]) and [[https://incudine.sf.net/][Incudine]].

Please note that this is a major work in progress at the moment, and very little useful functionality is currently implemented. Feel free to submit bug reports or suggestions, though, or even a pull request if you're feeling brave.

* Intro

To start thundersnow, put it in your quicklisp ~local-projects~ directory, then:

#+BEGIN_SRC lisp
(ql:quickload :thundersnow)

(thundersnow:thundersnow)
#+END_SRC

More documentation and functionality will exist in the future.

* Overview

The main GUIs included with thundersnow are the following. Note none of these have much implemented yet.

** Thundersnow
The main interface; gives a general overview of all synths, patterns, routines, etc, that are playing, buffers that are loaded, etc, and makes it easier to control or modify them.
** Tracker
A tracker-inspired interface over cl-patterns' ~ptrack~ pattern.
** Piano roll
A piano roll interface for editing sequences of notes via cl-patterns' ~eseq~. Will eventually become a more general pattern/data plotting interface.
** Stepseq
A simple drum machine-style interface for editing and sequencing drum patterns.
** Wave editor
Show the waveform of a sound buffer and optionally ~splits~ data. The waveform view gadget will also be used for a general scope in the future if it can be made to run fast enough for that.
** Keyboard GUI [working name]
Simple interface to trigger and control synths from your keyboard or via the GUI.

** Pattern GUIs
Not implemented at all yet. GUIs for showing the structure of nested patterns and for changing their parameters, etc.
** Synth GUIs
Not implemented at all yet. Interfaces to controlling synths as well as generating synthdefs. Will likely use template macros to generate the synthdefs.
** File/object browser
Not implemented at all yet. Fast/efficient interface to find a file (local or potentially remote) or object (i.e. a ~bdef~).

* Features

Basically nothing yet! Wow!

- Configuration file loaded when thundersnow is started (located at ~$XDG_CONFIG_HOME/thundersnow/init.lisp~). This is basically just whatever Lisp code you want to run before the window opens. Examples/suggestions forthcoming.

* Future

Roughly in descending order of priority. Not an exhaustive list, of course.

- Specify a license
- Scope/waveform view
- Knob gadget
- Example config files
- Theming support (this also depends on more theming functionality being implemented in McCLIM)
- File search pane (for loading samples, projects, etc)
  - Use thumbnails if possible
- Command line interface
- MIDI controller support
- Routing GUI/"Session" support
- Make it actually look good (related to theming support, above)
- Create the universe
  - Bake an apple pie from scratch
- Create a site
  - Register a domain
- Integration with [[https://freesound.org/][Freesound]] -- maybe via [[https://github.com/ntrocado/freesound][ntrocado/freesound]]
- Integration with [[http://sox.sourceforge.net/][SoX]] to generate soundfile thumbnails (spectrograms):
~sox input.wav -n channels 1 spectrogram -r -o output.png~
- Look into this page on [[http://www.personal.psu.edu/cab38/ColorSch/Schemes.html][color schemes]]
- Consider using [[https://github.com/szos/defconfig][defconfig]] for customization/options/etc.
- EVERYTHING ELSE!

* Known Issues

- Interfaces are sometimes drawn with the wrong size at first, until a command is run or a manual redraw triggered. This appears to be due to [[https://github.com/McCLIM/McCLIM/issues/970][this bug]] in McCLIM.
