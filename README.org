#+TITLE: thundersnow

Digital audio workstation and [[https://en.wikipedia.org/wiki/Live_coding][live coding]] laboratory in Common Lisp using the [[https://github.com/McCLIM/McCLIM/][McCLIM]] Common Lisp Interface Manager implementation.

Contains various GUIs and functionality for working with audio in Lisp in real time. Primarily developed for use with [[https://github.com/defaultxr/cl-patterns][cl-patterns]] and [[https://github.com/defaultxr/bdef][bdef]], using audio servers like [[https://supercollider.github.io/][SuperCollider]] (via [[https://github.com/byulparan/cl-collider][cl-collider]]) and [[https://incudine.sf.net/][Incudine]].

Please note that this is a major work in progress at the moment, and very little useful functionality is currently implemented. Feel free to submit bug reports or suggestions, though, or even a pull request if you're feeling brave.

* Intro

To start thundersnow, put it in your quicklisp ~local-projects~ directory, then:

#+BEGIN_SRC lisp
(ql:quickload :thundersnow)

(thundersnow:thundersnow)
#+END_SRC

More documentation and functionality will exist in the future.

* Overview

The main GUIs included with thundersnow are the following. Note all of them are in very early stages of development and may have bugs and lack various functionality.

** Main GUIs
*** Thundersnow
The main interface; gives a general overview of all synths, patterns, bdefs/buffers, and their status, and allows for high-level control and modification of them.
*** Tracker
A tracker-inspired interface over cl-patterns' ~ptrack~ pattern.
*** Piano roll
A piano roll interface for editing sequences of notes via cl-patterns' ~eseq~. Will eventually become a more general pattern/data plotting interface.
*** Stepseq
A simple drum machine-style interface for editing and sequencing drum patterns.
*** Wave editor
Show the waveform of a sound buffer and optionally ~splits~ data.
*** Keyboard GUI [working name]
Simple interface to trigger and control synths from your keyboard or via the GUI.

*** Pattern GUIs
GUIs for showing the structure of defined patterns and for changing their parameters, etc.
*** Synth GUIs
Not implemented at all yet. Interfaces to controlling synths as well as generating synthdefs. Will likely use template macros to generate the synthdefs.
*** File/object browser
Not implemented at all yet. Fast/efficient interface to find a file (local or potentially remote) or object (i.e. a ~bdef~).

** Gadgets
*** Knob
Basic gadget to view and set a numeric parameter via a radial interface.
*** Ruler bar [working name]
Not implemented at all yet. Scrollbar replacement gadget that can be used to adjust zoom and scroll position simultaneously.
*** Scope
Oscilloscope-like display for realtime sound visualization.
*** Status pane
Basic gadget to show status information such as the number of synths playing, CPU usage, etc.
*** Tempo pane
Gadget displaying the tempo (in BPM and Hz), pulsing to the beat, and allowing tempo alteration.

* Features

- Configuration file loaded when thundersnow is started (located at ~$XDG_CONFIG_HOME/thundersnow/init.lisp~). This is basically just whatever Lisp code you want to run before the window opens. Examples/suggestions forthcoming.
- Basic "theming" support.
- (Theoretical) support for multiple audio backends, thanks to the use of [[https://github.com/defaultxr/cl-patterns][cl-patterns]] and [[https://github.com/defaultxr/bdef][bdef]].

* Future

Roughly in descending order of priority. Not an exhaustive list, of course.

- Specify a license
- Example config files
- Theming support (this also depends on more theming functionality being implemented in McCLIM)
- Documentation
- File search pane (for loading samples, projects, etc)
  - Use thumbnails if possible
- Command line interface
- MIDI controller support
- Routing GUI/"Session" support
- Make it actually look good (related to theming support, above)
- Create the universe
  - Bake an apple pie from scratch
- Create a site
  - Register a domain
- Integration with [[https://freesound.org/][Freesound]] -- maybe via [[https://github.com/ntrocado/freesound][ntrocado/freesound]]
- Integration with [[http://sox.sourceforge.net/][SoX]] to generate soundfile thumbnails (spectrograms):
~sox input.wav -n channels 1 spectrogram -r -o output.png~
- Look into this page on [[http://www.personal.psu.edu/cab38/ColorSch/Schemes.html][color schemes]]
- Consider using [[https://github.com/szos/defconfig][defconfig]] for customization/options/etc.
- Standalone mode (for when Thundersnow is started from the command line, not loaded from an already-running Lisp image)
- File indexer (for fast searching through sample/music directories)
- Playlist view
- MIDI mapping
- MIDI device interfacing (generalized functionality to send/receive MIDI to/from controllers to use them as an interface and display relevant info)
- EVERYTHING ELSE!

* Known Issues

- Interfaces are sometimes drawn with the wrong size at first, until a command is run or a manual redraw triggered. This appears to be due to [[https://github.com/McCLIM/McCLIM/issues/970][this bug]] in McCLIM.
- Theming is not yet supported for all aspects of the GUI. [[https://github.com/McCLIM/McCLIM/issues/842][Related issue in McCLIM]].
